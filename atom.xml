<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>喬喬</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-19T10:03:47.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>乔乔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>原型链</title>
    <link href="http://yoursite.com/2019/08/19/%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    <id>http://yoursite.com/2019/08/19/原型链/</id>
    <published>2019-08-19T09:56:10.000Z</published>
    <updated>2019-08-19T10:03:47.000Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;如果说上次说原型就让你吐血了，那这篇原型链可能让你马上气绝身亡。 哈哈哈。。。其实原型链这个家伙，说难很难，说简单也简单，接下来就让我来说道说道，准备好救心丸！！！！&lt;br&gt;原型链的顶层就是Object.prototype，而这个对象的是没有原型对象的，在chrome控制台中输入Object.&lt;code&gt;__proto__&lt;/code&gt;，输出是ƒ () {  }，一个空的函数。&lt;/p&gt;
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="Object" scheme="http://yoursite.com/tags/Object/"/>
    
  </entry>
  
  <entry>
    <title>原型</title>
    <link href="http://yoursite.com/2019/08/16/%E5%8E%9F%E5%9E%8B/"/>
    <id>http://yoursite.com/2019/08/16/原型/</id>
    <published>2019-08-16T10:29:15.000Z</published>
    <updated>2019-08-19T09:58:48.000Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;对于初学者来说，JavaScript的原型是一件让人头疼甚至吐血的事情，prototype和&lt;code&gt;__proto__&lt;/code&gt;又让人傻傻分不清，虽然网上有很多相关资料，还有一张经典的图，线条很多，看的就头疼，更甚者吐血身亡，就算是对于“老人”，也不好整明白呀，或者好不容易搞清楚了，过几天又忘了（我就是这样，嘿嘿）。接下来请用许我尽可能形象生动的来阐述明白，哈哈哈哈哈。。。&lt;/p&gt;
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="Object" scheme="http://yoursite.com/tags/Object/"/>
    
  </entry>
  
  <entry>
    <title>面向对象的程序设计模式</title>
    <link href="http://yoursite.com/2019/08/15/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/08/15/面向对象的程序设计模式/</id>
    <published>2019-08-15T02:58:55.000Z</published>
    <updated>2019-08-15T03:25:26.000Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;工厂模式&quot;&gt;&lt;a href=&quot;#工厂模式&quot; class=&quot;headerlink&quot; title=&quot;工厂模式&quot;&gt;&lt;/a&gt;工厂模式&lt;/h2&gt;&lt;p&gt;工厂模式是软件工程领域一种广为认知的设计模式。&lt;br&gt;工厂模式虽然解决了创建多个对象的问题，但却没有解决对象的识别问题（即怎样知道一个对象的类型）。&lt;/p&gt;
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="Object" scheme="http://yoursite.com/tags/Object/"/>
    
  </entry>
  
  <entry>
    <title>理解对象</title>
    <link href="http://yoursite.com/2019/08/12/%E7%90%86%E8%A7%A3%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2019/08/12/理解对象/</id>
    <published>2019-08-12T08:08:41.000Z</published>
    <updated>2019-08-16T10:28:38.000Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;什么是对象？&quot;&gt;&lt;a href=&quot;#什么是对象？&quot; class=&quot;headerlink&quot; title=&quot;什么是对象？&quot;&gt;&lt;/a&gt;什么是对象？&lt;/h2&gt;&lt;p&gt;对象是无序属性的集合，其属性可以包含基本值、对象或者函数，在javascript中，对象是拥有属性和方法的数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每个对象都是基于一个引用类创建的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="Object" scheme="http://yoursite.com/tags/Object/"/>
    
  </entry>
  
</feed>
